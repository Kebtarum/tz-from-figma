{"version":3,"sources":["assets/CloseIcon.svg","assets/CloseBlack.svg","assets/Ellipse.svg","assets/Back.svg","assets/Trash.svg","assets/YellowRect.svg","assets/RedRect.svg","assets/GreenRect.svg","assets/Calendar.svg","utils/validators/validators.js","common/Popup.js","components/Header/Header.js","redux/leftNavBarReducer.js","redux/listReducer.js","components/Header/HeaderContainer.js","components/LeftNavBar/LeftNavBar.js","components/LeftNavBar/LeftNavBarContainer.js","components/TasksList/Task/TaskDetails/TaskDetails.js","components/TasksList/Task/TaskDetails/TaskDetailsContainer.js","components/TasksList/Task/Task.js","components/TasksList/TasksList.js","components/TasksList/TasksListContainer.js","redux/redux-store.js","App.js","serviceWorker.js","index.js","assets/Exclude.svg","assets/Oval.svg","assets/Arrow.svg","assets/Edit.svg","assets/AddTask.svg","assets/Burger.svg"],"names":["module","exports","maxLength","required","value","maxLength50","length","PopupReduxForm","reduxForm","form","props","onClose","togglePopup","onSubmit","handleSubmit","className","onClick","src","closeIcon","alt","Field","component","name","validate","type","Header","onPopup","onToggle","isToggle","burger","addsvg","showPopup","formData","addToDo","dedline","priority","mark","discription","initialState","leftNavBarReducer","state","action","listData","id","check","currentItem","listReducer","item","find","i","taskId","dedlineYYYY","slice","dedlineMM","dedlineDD","newDedline","HeaderContainer","setState","this","React","Component","connect","leftNavBar","LeftNavBar","console","log","isArrowOpen","icon1","icon2","icon3","toggleArrow","arrowIcon","LeftNavBarContainer","TaskDetails","to","backIcon","listItem","checkIcon","deleteIcon","editIcon","TaskDetailsContainer","match","params","getListItem","compose","listPage","withRouter","Task","winWidth","yellowRect","redRect","greenRect","pathname","windowWidth","TasksList","list","map","TasksListContainer","handleResize","e","window","innerWidth","addEventListener","require","createStore","combineReducers","applyMiddleware","store","formReducer","thunkMiddleware","__store__","App","exact","path","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.77465888.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CloseIcon.5e50c294.svg\";","module.exports = __webpack_public_path__ + \"static/media/CloseBlack.5e8a7496.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ellipse.111e7f5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Back.6b897fa8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Trash.1e0534b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/YellowRect.07bbfc02.svg\";","module.exports = __webpack_public_path__ + \"static/media/RedRect.8394be49.svg\";","module.exports = __webpack_public_path__ + \"static/media/GreenRect.7e2da888.svg\";","module.exports = __webpack_public_path__ + \"static/media/Calendar.6445bcaf.svg\";","export const required= (value) =>{\r\n    if (value) return undefined;\r\n    \r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) =>{\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    \r\n    return undefined;\r\n}\r\n","import React from 'react';\r\nimport './Popup.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport closeIcon from '../assets/CloseBlack.svg'\r\nimport calendarIcon from '../assets/Calendar.svg'\r\nimport { maxLengthCreator, required } from '../utils/validators/validators';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst renderField = (field) => (\r\n    <div>\r\n      <input {...field.input} type=\"text\"/>\r\n      {field.meta.touched && field.meta.error && \r\n       <span className=\"error\">{field.meta.error}</span>}\r\n    </div>\r\n  )\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Popup = (props) => {\r\n\r\n    const onClose = () =>{\r\n        props.togglePopup();\r\n    }\r\n\r\n    return (\r\n        // <div className={s.popup}>\r\n        //     <div className={s.popupInner}>\r\n        //         <h1>{props.text}</h1>\r\n        //         <input type={\"file\"} onChange={props.onMainPhotoSelected} />\r\n        //         <button onClick={props.onMainPhotoAdd}>close me</button>\r\n        //         <button onClick={props.closePopup}>close me</button>\r\n        //     </div>\r\n        // </div>\r\n        <form onSubmit={props.handleSubmit} className=\"popup\">\r\n            <div className=\"popup__inner\">\r\n                <div className=\"popup__row\">\r\n                    <div className=\"popup__title\">\r\n                        <span>Создание задачи</span>\r\n                    </div>\r\n                    <div className=\"popup__close\" onClick={onClose}>\r\n                        <img src={closeIcon} alt='closeIcon' />\r\n                    </div>\r\n                </div>\r\n                <div className=\"popup__row\">\r\n                    <div className=\"popup__item popup__input_name\">\r\n                        <span>Название</span>\r\n                        <Field component={'input'} name={'name'} className='popup__input' validate={[required, maxLength50]} />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"popup__row\">\r\n                    <div className=\"popup__item popup__input_dedline\">\r\n                        <span>Дедлайн</span>\r\n                        <Field component={\"input\"} name={'dedline'} type={'date'} className='popup__input popup__input_calendar' validate={[required]} />\r\n                        \r\n                    </div>\r\n                    <div className=\"popup__item popup__input_priority\">\r\n                        <span>Приоритет</span>\r\n                        <Field component={'select'} name={'priority'} className='popup__input' >\r\n                            <option>Высокий</option>\r\n                            <option>Средний</option>\r\n                            <option>Низкий</option>\r\n                        </Field>\r\n                    </div>\r\n                    <div className=\"popup__item popup__input_priority \">\r\n                        <span>Метка</span>\r\n                        <Field component={'select'} name={'mark'} className='popup__input popup__input_colors' >\r\n                            <option >green</option>\r\n                            <option>yellow</option>\r\n                            <option>red</option>\r\n                        </Field>\r\n                        <div className=\"circle-box\">\r\n                            <div className=\"circle\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"popup__row\">\r\n                    <div className=\"popup__item popup__input_discription\">\r\n                        <span>Описание</span>\r\n                    <Field component={'textarea'} name={'discription'} className='popup__input'  />\r\n                    </div>\r\n                </div>\r\n                \r\n                    <div className=\"popup__line\"></div>\r\n                \r\n                \r\n                <div className=\"popup__row_button\">\r\n                    {/* <div className=\"popup__button popup__button_cancel\" onClick={onClose}> */}\r\n                        <button className=\"popup__button popup__button_cancel\" onClick={onClose}>\r\n                        <span>Отменить</span></button>\r\n                    \r\n                    {/* <div className=\"popup__button\"> */}\r\n                        <button className=\"popup__button\" >\r\n                        <span>Создать</span></button>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nconst PopupReduxForm = reduxForm({\r\n    form: '/add-todo',\r\n\r\n})(Popup);\r\n\r\nexport default PopupReduxForm;\r\n\r\n{/* <div className={s.popupInner}>\r\n                <h2>Uploading new photo</h2> */}\r\n{/* {createNewField(null, 'photoFile',[], Input, { type: 'file' })} */ }\r\n{/* <Field component={input} name={'photoFile'} type={'file'} /> */ }\r\n{/* <input type=\"file\" name=\"photoFile\" onChange={() =>{}} /> */ }\r\n{/* <Field name=\"photoFile\" component={FieldFile} type={\"file\"} /> */ }\r\n{/* <input type={\"file\"}  /> */ }\r\n{/* <div className={s.popupInnerItems}>\r\n                    <div className={s.popupInnerItem}>\r\n                        <button className={s.button} >Submit</button>\r\n                    </div>\r\n                    <div className={s.popupInnerItem}>\r\n                        <button className={s.button} onClick={props.closePopup}>Close</button>\r\n                    </div>\r\n                </div> */}\r\n{/* </div> */ }","import { AddToQueueOutlined } from '@material-ui/icons';\r\nimport React, { useState } from 'react';\r\nimport addsvg from '../../assets/AddTask.svg';\r\nimport burger from '../../assets/Burger.svg'\r\nimport closeIcon from '../../assets/CloseIcon.svg'\r\nimport PopupReduxForm from '../../common/Popup';\r\nimport './Header.css';\r\n\r\n\r\nfunction Header(props) {\r\n\r\n    const toggleClick = () => {\r\n         props.onToggle();\r\n    }\r\n    const onPopup = () => {\r\n        props.togglePopup();\r\n    }\r\n    const onSubmitToDo = (formData) => {\r\n        props.addToDo(formData.name, formData.dedline, formData.priority, formData.mark, formData.discription);\r\n        onPopup();\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <div className=\"header__burger\" onClick={toggleClick}>\r\n                    {props.isToggle ? <img src={closeIcon} alt='closeIcon' /> : <img src={burger} alt='burger' />}\r\n                </div>\r\n                <div className=\"header__logo\">\r\n                    {/* <img src={logosvg} alt='logosvg' /> */}\r\n                    <span>To-Do List</span>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <img src={addsvg} alt='addsvg' onClick={onPopup}/>\r\n                {/* <img src={addIcon} alt='addIcon' /> */}\r\n            </div>\r\n            {props.showPopup ? <PopupReduxForm onSubmit={onSubmitToDo} togglePopup={props.togglePopup} />: null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","let initialState = {\r\n\r\n    isToggle:false,\r\n\r\n}\r\n\r\nconst leftNavBarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"ON-TOGGLE\":\r\n            return {\r\n                ...state,\r\n                isToggle: !state.isToggle,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const onToggle = () => {\r\n    return {\r\n        type: 'ON-TOGGLE',\r\n    }\r\n}\r\n\r\nexport default leftNavBarReducer;","let initialState = {\r\n\r\n    listData: [\r\n        { id: 1, check: true, name: \"Сходить в магазин\", dedline: \"29.09.2020\", priority: \"Высокий\", mark: \"yellow\", discription: \"Огибающая семейства поверхностей, конечно, естественно трансформирует интеграл по бесконечной области. Однако не все знают, что ортогональный определитель правомочен. Функция B(x,y) поддерживает интеграл от функции комплексной переменной, откуда следует доказываемое равенство.\" },\r\n        { id: 2, check: true, name: \"Помыть машину\", dedline: \"29.09.2020\", priority: \"Средний\", mark: \"red\", discription: \"...\" },\r\n        { id: 3, check: false, name: \"Ужин\", dedline: \"29.09.2020\", priority: \"Низкий\", mark: \"green\", discription: \"Приготовить лазанью и Карбанару\" },\r\n\r\n    ],\r\n\r\n    currentItem:[],\r\n\r\n}\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"GET-LIST-ITEM\":\r\n            let item = state.listData.find((i) => i.id == action.taskId);\r\n            return {\r\n                ...state,\r\n                currentItem: item,\r\n                // listData: [...state.listData, { id: 6, message: body }]\r\n            };\r\n        case \"ADD-TODO\":\r\n            let dedlineYYYY = action.dedline.slice(0,4)\r\n            let dedlineMM = action.dedline.slice(5,7)\r\n            let dedlineDD = action.dedline.slice(8)\r\n            let newDedline = dedlineDD + '. ' + dedlineMM + '. ' + dedlineYYYY\r\n            return {\r\n                ...state,\r\n                listData: [...state.listData, { \r\n                    id: state.listData.length + 1, \r\n                    check: false, \r\n                    name: action.name, \r\n                    dedline: newDedline,\r\n                    priority: action.priority, \r\n                    mark: action.mark, \r\n                    discription: action.discription }]\r\n                // listData: [...state.listData, { id: 6, message: body }]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const getListItem = (taskId) => {\r\n    return {\r\n        type: 'GET-LIST-ITEM',\r\n        taskId,\r\n    }\r\n}\r\n\r\nexport const addToDo = (name, dedline, priority, mark, discription ) => {\r\n    return {\r\n        type: 'ADD-TODO',\r\n        name, \r\n        dedline, \r\n        priority, \r\n        mark, \r\n        discription,\r\n    }\r\n}\r\n\r\nexport default listReducer;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { onToggle } from '../../redux/leftNavBarReducer';\r\nimport { addToDo } from '../../redux/listReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showPopup: false };\r\n  }\r\n\r\n  togglePopup = () => {\r\n    this.setState({ showPopup: !this.state.showPopup });\r\n   };\r\n\r\n\r\n  render() {\r\n      return (\r\n          <>\r\n              <Header \r\n              isToggle={this.props.isToggle}\r\n              onToggle={this.props.onToggle}\r\n              showPopup={this.state.showPopup}\r\n              togglePopup={this.togglePopup}\r\n              addToDo={this.props.addToDo}\r\n              />\r\n          </>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isToggle: state.leftNavBar.isToggle,\r\n    \r\n  }\r\n}\r\n\r\nexport default connect( mapStateToProps,{ onToggle, addToDo })(HeaderContainer);","import React from 'react';\r\nimport './LeftNavBar.css';\r\nimport icon3 from '../../assets/Ellipse.svg';\r\nimport icon2 from '../../assets/Exclude.svg';\r\nimport icon1 from '../../assets/Oval.svg';\r\nimport arrowIcon from '../../assets/Arrow.svg';\r\nimport arrowCloseIcon from '../../assets/Arrow.svg';\r\n\r\nfunction LeftNavBar(props) {\r\n\r\n    const toggleArrow = () => {\r\n        props.toggleArrow();\r\n    }\r\n\r\n    console.log(props.isArrowOpen)\r\n    return (\r\n        <div className={'leftnavbar' + (props.isToggle ? ' leftnavbar_open blackscreen' : '')}>\r\n            <div className='leftnavbar__container'>\r\n                <div className=\"leftnavbar__item\">\r\n                    <div className='icon-box'>\r\n                        <img src={icon1} alt='icon1' />\r\n                    </div>\r\n                    <span>Новые</span>\r\n                </div>\r\n\r\n                <div className=\"leftnavbar__item\">\r\n                    <div className='icon-box'>\r\n                        <img src={icon2} alt='icon2' />\r\n                    </div>\r\n\r\n                    <span>Выполненные</span>\r\n                </div>\r\n                <div className=\"leftnavbar__item leftnavbar__item--active\">\r\n                    <div className='icon-box'>\r\n                        <img src={icon3} alt='icon3' />\r\n                    </div>\r\n                    <span>Все</span>\r\n                </div>\r\n                <div className=\"leftnavbar__item leftnavbar__item_priority\"  onClick={toggleArrow}>\r\n                    <div className='icon-box icon-box_arrow'>\r\n                        {props.isArrowOpen ? <img src={arrowIcon} alt='arrowicon' /> : <img src={arrowIcon} alt='arrowCloseIcon' className=\"icon-box_arrow-close\" />}\r\n                    </div>\r\n                    <span>Приоритет</span>\r\n\r\n                </div>\r\n                <div className={props.isArrowOpen ? \"leftnavbar__subitems\" : \"leftnavbar__subitems_close\" }>\r\n                    <div className=\"leftnavbar__item leftnavbar__item_subitem\">\r\n                        Высокий\r\n                </div>\r\n                    <div className=\"leftnavbar__item leftnavbar__item_subitem\">\r\n                        Средний\r\n                </div>\r\n                    <div className=\"leftnavbar__item leftnavbar__item_subitem\">\r\n                        Низкий\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftNavBar;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LeftNavBar from './LeftNavBar';\r\n\r\nclass LeftNavBarContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isArrowOpen: true };\r\n  }\r\n\r\n  toggleArrow = () => {\r\n    this.setState({ isArrowOpen: !this.state.isArrowOpen });\r\n   };\r\n\r\n  render() {\r\n      return (\r\n          <>\r\n              <LeftNavBar isToggle={this.props.isToggle}\r\n                toggleArrow={this.toggleArrow}\r\n                isArrowOpen={this.state.isArrowOpen}\r\n              />\r\n          </>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      isToggle: state.leftNavBar.isToggle,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{ })(LeftNavBarContainer);","import React from 'react';\r\nimport './TaskDetails.css';\r\nimport backIcon from '../../../../assets/Back.svg';\r\nimport checkIcon from '../../../../assets/Exclude.svg';\r\nimport deleteIcon from '../../../../assets/Trash.svg';\r\nimport editIcon from '../../../../assets/Edit.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction TaskDetails(props) {\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            <div className=\"heading-navigate\">\r\n                <div className=\"heading-navigate__left\">\r\n                    <Link to={'/'} className=\"back\" >\r\n                        <img src={backIcon} alt='backIcon' />\r\n                    </Link>\r\n                    <div className=\"title\">{props.listItem.name}</div>\r\n                </div>\r\n                <div className=\"heading-navigate__right\">\r\n                    <div className=\"button\">\r\n                        <div className=\"button__icon\">\r\n                            <img src={checkIcon} alt='checkIcon' />\r\n                        </div>\r\n                        <span className=\"hiddenSpan\">Выполнена</span>\r\n                    </div>\r\n                    <div className=\"button\">\r\n                        <div className=\"button__icon\">\r\n                            <img src={deleteIcon} alt='detecIcon' />\r\n                        </div>\r\n                        <span className=\"hiddenSpan\">Удалить</span>\r\n                    </div>\r\n                    <div className=\"button\">\r\n                        <div className=\"button__icon\">\r\n                            <img src={editIcon} alt='editIcon' />\r\n                        </div>\r\n                        <span className=\"hiddenSpan\">Редактировать</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"task-info\">\r\n                \r\n                <div className=\"task-info__item  task-info__check\">\r\n                    <div className=\"button__icon\">\r\n                        <img src={checkIcon} alt='checkIcon' />\r\n                    </div>\r\n                    \r\n                    <span className=\"task-info__title\">Статус задачи</span>\r\n                    {props.listItem.check ? \"Выполнена\" : \"Нет\"}\r\n                    \r\n                    \r\n                    \r\n                </div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"task-info__item\">\r\n                    \r\n                    <span className=\"task-info__title\">Приоритет</span>\r\n                    {props.listItem.priority}\r\n                </div>\r\n                <div className=\"line line_horizontal\"></div>\r\n                <div className=\"task-info__item\">\r\n                    \r\n                    <span className=\"task-info__title\">Дедлайн</span>\r\n                    {props.listItem.dedline}\r\n                </div>\r\n                <div className=\"line\"></div>\r\n                <div className=\"task-info__item\">\r\n                    \r\n                    <span className=\"task-info__title\">Метка</span>\r\n                    {props.listItem.mark === \"yellow\" ? <div className=\"block block__yellow\"></div>\r\n                    : props.listItem.mark === \"red\" ? <div className=\"block block__red\"></div>\r\n                    : <div className=\"block block__green\"></div>}\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"task-content\">\r\n                <p>{props.listItem.discription} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskDetails;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getListItem } from '../../../../redux/listReducer';\r\nimport TaskDetails from './TaskDetails';\r\nimport { Redirect, useParams, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass TaskDetailsContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let taskId  = this.props.match.params.taskId\r\n        console.log(taskId);\r\n        this.props.getListItem(taskId);\r\n        // if(!listItem){\r\n        //     return <Redirect to={'/'} /> \r\n        // }\r\n        // this.props.getUsers(savedToken);\r\n    }\r\n\r\n  render() {\r\n\r\n      return (\r\n          <>\r\n              <TaskDetails listItem={this.props.listItem} \r\n        \r\n              />\r\n          </>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      listItem: state.listPage.currentItem\r\n  }\r\n}\r\n\r\n// export default connect(mapStateToProps,{ getListItem })(TaskDetailsContainer);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{ getListItem }),\r\n    withRouter\r\n    )(TaskDetailsContainer);","import React from 'react';\r\nimport './Task.css';\r\nimport '../TasksList.css';\r\nimport icon2 from '../../../assets/Exclude.svg';\r\nimport icon1 from '../../../assets/Oval.svg';\r\nimport editIcon from '../../../assets/Edit.svg';\r\nimport yellowRect from '../../../assets/YellowRect.svg';\r\nimport redRect from '../../../assets/RedRect.svg';\r\nimport greenRect from '../../../assets/GreenRect.svg';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nfunction Task(props) {\r\n\r\n    const cutDiscription = (winWidth, discription) => {\r\n        let cutDisc\r\n        if (winWidth > 1024) {\r\n            cutDisc = discription.length > 55 ? discription.slice(0, 55) + '…' : discription;\r\n        }\r\n        else if (winWidth > 320) {\r\n            cutDisc = discription.length > 41 ? discription.slice(0, 41) + '…' : discription;\r\n        }\r\n        else {\r\n            cutDisc = discription.length > 19 ? discription.slice(0, 19) + '…' : discription;\r\n        }\r\n        return cutDisc;\r\n    }\r\n\r\n    // const cutDate = (winWidth, date) => {\r\n    //     let shortDate\r\n    //     if (winWidth < 320) {\r\n    //         cutDisc = date.slice(0, 7);\r\n    //     }\r\n    //     else {\r\n    //         cutDisc = discription.length > 19 ? discription.slice(0, 19) + '…' : discription;\r\n    //     }\r\n    //     return shortDate;\r\n    // }\r\n\r\n    return (\r\n        <div className=\"taskslist__row taskslist__row_line\">\r\n            <div className=\"taskslist__cells taskslist__cells_left \">\r\n                <div className=\"taskslist__cell taskslist__icon\">\r\n                    <div className=\"icon-box icon-box_checkbox\">\r\n                        {props.item.check ?\r\n                            <img src={icon2} alt='icon2' />\r\n                            : <img src={icon1} alt='icon1' />}\r\n                    </div>\r\n                    {props.item.mark === \"yellow\" && <img src={yellowRect} alt='yellowRect' />}\r\n                    {props.item.mark === \"red\" && <img src={redRect} alt='yellowRect' />}\r\n                    {props.item.mark === \"green\" && <img src={greenRect} alt='yellowRect' />}\r\n                </div>\r\n                <div className=\"taskslist__cell tasklist__cell_name\">\r\n                    <div className=\"taskslist__name\">\r\n                        <Link to={{ pathname: \"/task/\" + props.item.id, state: \"1\" }} >{props.item.name}</Link>\r\n                    </div>\r\n                    <div className=\"taskslist__discription\">\r\n                        <span>{cutDiscription(props.windowWidth, props.item.discription)}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"taskslist__cells taskslist__cells_right\">\r\n                <div className=\"taskslist__cell tasklist__cell_dedline\">\r\n                    <span>{props.windowWidth < 321 ? props.item.dedline.slice(0, 8) : props.item.dedline}</span>\r\n                </div>\r\n                <div className=\"taskslist__cell tasklist__cell_priority\">\r\n                    <span>{props.item.priority}</span>\r\n                </div>\r\n                <div className=\"taskslist__cell tasklist__cell_icon\">\r\n                    <div className=\"icon-box icon-box_edit\">\r\n                        <img src={editIcon} alt='editIcon' />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport Task from './Task/Task';\r\nimport './TasksList.css';\r\n\r\nfunction TasksList(props) {\r\n  return (\r\n    <div className=\"taskslist\">\r\n      <div className=\"taskslist__header-row\">\r\n        <div className=\"taskslist__cells taskslist__cells_left\">\r\n          <div className=\"taskslist__cell\"></div>\r\n          <div className=\"taskslist__cell tasklist__cell_name taskslist__header\">Название</div>\r\n        </div>\r\n        <div className=\"taskslist__cells taskslist__cells_right\">\r\n          <div className=\"taskslist__cell tasklist__cell_dedline taskslist__header\">Дедлайн</div>\r\n          <div className=\"taskslist__cell tasklist__cell_priority taskslist__header\">Приоритет</div>\r\n          <div className=\"taskslist__cell tasklist__cell_icon\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      {props.list.map(item =>\r\n        <Task item={item} windowWidth={props.windowWidth} />\r\n      )}\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default TasksList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TasksList from './TasksList';\r\n\r\n\r\nclass TasksListContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { windowWidth: window.innerWidth };\r\n  }\r\n\r\n  handleResize = (e) => {\r\n    this.setState({ windowWidth: window.innerWidth });\r\n   };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n   }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n   } \r\n\r\n  render() {\r\n    console.log(this.state.windowWidth)\r\n      return (\r\n          <>\r\n              <TasksList list={this.props.list} \r\n                windowWidth={this.state.windowWidth}\r\n              />\r\n          </>\r\n      )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      list: state.listPage.listData\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,{ })(TasksListContainer);\r\n","import listReducer from \"./listReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport leftNavBarReducer from \"./leftNavBarReducer\";\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nconst { createStore, combineReducers, applyMiddleware} = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    leftNavBar: leftNavBarReducer,\r\n    listPage: listReducer,\r\n    form: formReducer,\r\n\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LeftNavBar from './components/LeftNavBar/LeftNavBar';\nimport LeftNavBarContainer from './components/LeftNavBar/LeftNavBarContainer';\nimport TaskDetails from './components/TasksList/Task/TaskDetails/TaskDetails';\nimport TaskDetailsContainer from './components/TasksList/Task/TaskDetails/TaskDetailsContainer';\nimport TasksListContainer from './components/TasksList/TasksListContainer';\nimport store from './redux/redux-store';\n\n\nfunction App() {\n  \n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <div className=\"app\">\n          <HeaderContainer />\n          <div className=\"app__body\">\n            <LeftNavBarContainer />\n            <Route exact path=\"/\">\n              <TasksListContainer />\n            </Route>\n            <Route exact path=\"/task/:taskId?\">\n              <TaskDetailsContainer />\n            </Route>\n\n\n          </div>\n\n        </div>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Exclude.1d219da3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Oval.f4e55fe8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Arrow.78f9a1bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Edit.bf95915a.svg\";","module.exports = __webpack_public_path__ + \"static/media/AddTask.d6a89307.svg\";","module.exports = __webpack_public_path__ + \"static/media/Burger.fb1b193e.svg\";"],"sourceRoot":""}